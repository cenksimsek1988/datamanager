<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
			 					 http://www.springframework.org/schema/security/spring-security.xsd
		 						 http://www.springframework.org/schema/beans 
		 						 http://www.springframework.org/schema/beans/spring-beans.xsd">

	<http auto-config="true" disable-url-rewriting="true"
		use-expressions="true">

		<headers>
			<cache-control />
		</headers>

		<intercept-url pattern="/resources/**"
			access="permitAll" />
		<intercept-url pattern="/javax.faces.resource/**"
			access="permitAll" />
		<intercept-url pattern="/pages/login.jsf*"
			access="permitAll" />
		<intercept-url pattern="/pages/home.*"
			access="hasRole('ROLE_HOME')" />

		<form-login login-page="/pages/login.jsf"
			default-target-url="/pages/home.xhtml"
			authentication-failure-url="/pages/login.jsf?error=error.login.wrong"
			username-parameter="username" password-parameter="password"
			login-processing-url="/auth/login_check" />

		<logout logout-success-url="/pages/login?logout"
			delete-cookies="JSESSIONID" />
		<csrf />

		<!-- <form-login login-page="/pages/login.jsp" -->
		<!-- default-target-url="/pages/home.xhtml" -->
		<!-- always-use-default-target="true" -->
		<!-- authentication-failure-url="/pages/login.jsf?error=error.login.wrong" 
			/> -->
		<!-- <logout logout-url="/logout" -->
		<!-- logout-success-url="/pages/login.jsp" /> -->
		<!-- <session-management> -->
		<!-- <concurrency-control max-sessions="1" -->
		<!-- expired-url="/pages/login.jsp?error=error.login.max" -->
		<!-- error-if-maximum-exceeded="false" /> -->
		<!-- </session-management> -->

		<custom-filter ref="sessionManagementFilter"
			before="SESSION_MANAGEMENT_FILTER" />
	</http>

	<global-method-security
		secured-annotations="enabled" jsr250-annotations="enabled"
		pre-post-annotations="enabled">
	</global-method-security>

	<authentication-manager>

		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?" />
		</authentication-provider>

	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength"
			value="10" />
	</beans:bean>

	<beans:bean id="sessionManagementFilter"
		class="org.springframework.security.web.session.SessionManagementFilter">
		<beans:constructor-arg
			name="securityContextRepository"
			ref="httpSessionSecurityContextRepository" />
	</beans:bean>

	<beans:bean id="httpSessionSecurityContextRepository"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
</beans:beans>
